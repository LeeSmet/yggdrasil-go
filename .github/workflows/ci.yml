name: Yggdrasil

on:
  push:
  pull_request:
  release:
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          args: --issues-exit-code=1

  build-linux:
    strategy:
      fail-fast: false
      matrix:
        goversion: ["1.17", "1.18"]
        goarch: ["amd64", "386", "arm64", "armel", "armhf", "mips", "mipsle"]

    name: Build & Test (Linux ${{ matrix.goarch }}, Go ${{ matrix.goversion }})
    needs: [lint]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.goversion }}

      - name: Build Yggdrasil
        env:
          GOARCH: ${{ matrix.goarch }}
        run: go build -v ./...

      - name: Unit tests
        if: $ {{ matrix.goarch }} == "amd64"
        run: go test -v ./...

  build-windows:
    strategy:
      fail-fast: false
      matrix:
        goversion: ["1.17", "1.18"]
        goarch: ["amd64", "arm64"]

    name: Build & Test (Windows ${{ matrix.goarch }}, Go ${{ matrix.goversion }})
    needs: [lint]

    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.goversion }}

      - name: Build Yggdrasil
        env:
          GOARCH: ${{ matrix.goarch }}
        run: go build -v ./...

      - name: Unit tests
        if: $ {{ matrix.goarch }} == "amd64"
        run: go test -v ./...

  build-macos:
    strategy:
      fail-fast: false
      matrix:
        goversion: ["1.17", "1.18"]
        goarch: ["amd64", "arm64"]

    name: Build & Test (macOS ${{ matrix.goarch }}, Go ${{ matrix.goversion }})
    needs: [lint]

    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.goversion }}

      - name: Build Yggdrasil
        env:
          GOARCH: ${{ matrix.goarch }}
        run: go build -v ./...

      - name: Unit tests
        if: $ {{ matrix.goarch }} == "amd64"
        run: go test -v ./...

  tests-ok:
    name: All tests passed
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    steps:
      - name: Check all tests passed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
